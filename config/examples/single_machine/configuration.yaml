homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 0
  longitude: 0
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/New_York
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
# introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# =============
# BEGIN RHASSPY
# =============

# Use pico text-to-speech system.
# Play results using aplay.
picotts_aplay:

# Play WAV files using aplay.
wav_aplay:

# Listen for a hotword with snowboy.
hotword_snowboy:
  model: $RHASSPY_ASSISTANT/wake/snowboy/okay_rhasspy.pmdl

# Service for training rhasspy speech/intent recognizers
rhasspy_train:
  ngram_path: $RHASSPY_TOOLS/srilm/bin/x86_64/ngram
  ngram_count_path: $RHASSPY_TOOLS/srilm/bin/x86_64/ngram-count
  phonetisaurus_path: $RHASSPY_TOOLS/phonetisaurus/phonetisaurus-x86_64
  phonetisaurus_fst: $RHASSPY_TOOLS/phonetisaurus/etc/g014b2b.fst
  project_dir: $RHASSPY_ASSISTANT/data/projects
  example_files:
    - $RHASSPY_ASSISTANT/data/examples.md
  rasa_config: $RHASSPY_ASSISTANT/etc/rasa/config_spacy.yml
  dictionary_files:
    - $RHASSPY_TOOLS/pocketsphinx/cmudict-en-us.dict
  dictionary_guess: $RHASSPY_ASSISTANT/data/guess.dict
  dictionary_mixed: $RHASSPY_ASSISTANT/data/mixed.dict
  language_model_base: $RHASSPY_TOOLS/pocketsphinx/en-70k-0.2-pruned.lm.gz
  language_model_example: $RHASSPY_ASSISTANT/data/examples.lm
  language_model_mixed: $RHASSPY_ASSISTANT/data/mixed.lm

# Do speech-to-text with pocketsphinx.
# Use higher-fidelity acoustic model (non-ptm)
# Use "mixed" language model (user + large English model).
stt_pocketsphinx:
  acoustic_model: $RHASSPY_TOOLS/pocketsphinx/cmusphinx-en-us-5.2
  language_model: $RHASSPY_ASSISTANT/data/mixed.lm
  dictionary: $RHASSPY_ASSISTANT/data/mixed.dict

# Recognize intents with rasaNLU.
rasa_nlu:
  project_dir: $RHASSPY_ASSISTANT/data/projects

# Responsd to intents from intent recognizer.
intent_script:
  GetTime:
    action:
      service: picotts_aplay.say
      data_template:
        message: "It is {{ now().strftime('%I') | int }} {{ now().strftime('%M %p') }}."
  GetTemperature:
    action:
      service: picotts_aplay.say
      data_template:
        message: "It is {{ states.sensor.temperature.state }} degrees."
  GarageOpenClosed:
    action:
      service: picotts_aplay.say
      data_template:
        message: >
          {% if states.binary_sensor.garage_door.state == 'on' %}
            The garage door is open.
          {% else %}
            The garage door is closed.
          {% endif %}

# =============
# END RHASSPY
# =============

sensor:
  - platform: command_line
    name: temperature
    unit_of_measurement: "Â°C"
    command: "date +%S"
  - platform: template
    sensors:
      last_text:
        friendly_name: "Last Text"
        value_template: "{{ states.stt_pocketsphinx.pocketsphinx.attributes.text }}"
      last_intent:
        friendly_name: "Last Intent"
        value_template: "{{ states.rasa_nlu.recognizer.attributes.intent }}"

# Lights
switch:
  - platform: command_line
    switches:
      living_room_lamp:
        command_on: "echo 'Living room lamp ON'"
        command_off: "echo 'Living room lamp OFF'"
      garage_light:
        command_on:  "echo 'Garage light ON'"
        command_off: "echo 'Garage light OFF'"

# Doors
binary_sensor:
  - platform: command_line
    name: garage_door
    command: "date +%S"
    value_template: >-
      {% if value | int < 30 %}
      open
      {% else %}
      closed
      {% endif %}
    payload_on: "closed"
    payload_off: "open"

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
